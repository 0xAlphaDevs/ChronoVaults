/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.6
  Forc version: 0.63.5
  Fuel-Core version: 0.35.0
*/

import {
  BigNumberish,
  BN,
  decompressBytecode,
  InputValue,
  Predicate,
  PredicateParams,
  Provider,
} from 'fuels';

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;

export type SpendingBudgetPredicateConfigurables = Partial<{
    RECEIVER: AddressInput;
    AMOUNT: BigNumberish;
    START_TIME: BigNumberish;
    TIME_PERIOD: BigNumberish;
}>;

export type SpendingBudgetPredicateInputs = [receiver: AddressInput, amount: BigNumberish, current_time: BigNumberish];

export type SpendingBudgetPredicateParameters = Omit<
  PredicateParams<SpendingBudgetPredicateInputs, SpendingBudgetPredicateConfigurables>,
  'abi' | 'bytecode'
>;

const abi = {
  "programType": "predicate",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "struct std::address::Address",
      "concreteTypeId": "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308",
      "metadataTypeId": 1
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "b256",
      "metadataTypeId": 0
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "bits",
          "typeId": 0
        }
      ]
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "receiver",
          "concreteTypeId": "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308"
        },
        {
          "name": "amount",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "current_time",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "main",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "RECEIVER",
      "concreteTypeId": "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308",
      "offset": 1328
    },
    {
      "name": "AMOUNT",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "offset": 1320
    },
    {
      "name": "START_TIME",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "offset": 1360
    },
    {
      "name": "TIME_PERIOD",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "offset": 1368
    }
  ]
};

const bytecode = decompressBytecode('H4sIAAAAAAAAA51UTWsTURS9SVM7FaGDSVVeFj4whVlUGagVd51hEpJpWvpAhYDGpAuhCxcatARXs3Spgh/L6kJcTiCCO2fpsj8hBV2IBrqwkNJFPO8lkwyTdNOBIXfuuefe8859hB2a9IwoSeqZNar9IKH3+/Sa6Lb4c0jiJ2miYxHvrVDlpJMUJ50U6l8A04BxYFoM+w7MGPKMGPYYmDnEzBj2iP0VmJtoPrVoptal5arjL28XkiTKfv2hq5Mo+vUHBZ3SeHfzlA6/GyVKpgsZD7nELZxi206ug39DOK0nqKkA14xCykOfLw0LsZsh4fh+I4/YzlmYPQ/OBXCug7MDDh9xZJ2M7YyH/LdIPhjnW+MZTquCuh32m4j90uO+fWbFfamXG92MJ2ti+H2JT8nfY86+9MFobIBbbge1rj4Pveeh4wfOYcpzYG4Pvc2hDkPF0Acfr1WLfg78l2ILNQI93FXM4dAInQcTOj/JeTmL6C3R1XcaatRuiDNnj1jxFbGyR2yrQ+KOr4VnZQcT9+Sy7KN87qYsaNVV7LRVPOWcWVmPc80Av6Jq3ZTF/hG9kbOPTfoALe+hab2ntM1FtGkDbdBV7sgepHZdbBM70iVfY8c85M8N+QuT/A5VXcLL0YOrGJ5r2Y1MoLu5oGYj5/joqTShpx72XBj2jPrVnOKXcZpfz4lWYn6JiF8C+zVPuVe6uh9FX1O7LczK+11Rsb04iPNy5yMvm1O8jOoOxrrhxyY8kL26q4T7s6fira+jfFYskr65SjXblLMsdUeddoDauqrdVHq8gR7Vg4d57Ah6b4Y7CiI7CnWtRXSV4n5WhUXVu9Ysd5esrJv38H3uorskd6eJkjXwo6vmD2baS/Sx3Oa7JUrAtxR2qV3C/4H8TuOXHXGpoxTxZ03qOOvzH5rTW5NgBQAA');

export class SpendingBudgetPredicate extends Predicate<
  SpendingBudgetPredicateInputs,
  SpendingBudgetPredicateConfigurables
> {
  static readonly abi = abi;
  static readonly bytecode = bytecode;

  constructor(params: SpendingBudgetPredicateParameters) {
    super({ abi, bytecode, ...params });
  }
}
