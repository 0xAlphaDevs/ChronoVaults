/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.6
  Forc version: 0.63.5
  Fuel-Core version: 0.35.0
*/

import {
  BigNumberish,
  BN,
  decompressBytecode,
  InputValue,
  Predicate,
  PredicateParams,
  Provider,
} from 'fuels';

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;

export type ConditionalReleasePredicateConfigurables = Partial<{
    RECEIVER: AddressInput;
    SECRET: BigNumberish;
}>;

export type ConditionalReleasePredicateInputs = [receiver: AddressInput, secret: BigNumberish];

export type ConditionalReleasePredicateParameters = Omit<
  PredicateParams<ConditionalReleasePredicateInputs, ConditionalReleasePredicateConfigurables>,
  'abi' | 'bytecode'
>;

const abi = {
  "programType": "predicate",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "struct std::address::Address",
      "concreteTypeId": "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308",
      "metadataTypeId": 1
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "b256",
      "metadataTypeId": 0
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "bits",
          "typeId": 0
        }
      ]
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "receiver",
          "concreteTypeId": "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308"
        },
        {
          "name": "secret",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "main",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "RECEIVER",
      "concreteTypeId": "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308",
      "offset": 1192
    },
    {
      "name": "SECRET",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "offset": 1224
    }
  ]
};

const bytecode = decompressBytecode('H4sIAAAAAAAAA41UTWsTURS9SUcyRaEPEkFeQZ+QxegqoJUu3zAJ07QJedBNFsY0+AsMKi7nJ6jgx7K6kC4nEMHl+wn9CREUWjTQhUJDF/G8l0wynVbowMCde++575xzZ4afVOg5UZ7s5Rx0pjrHplN6Q+SpXyekfpBQI0ni9AG1z0Z5dTZy0P8UNYGai5rI1DT/rYDPtZ9JWumOyesEsder5UntxO0ndUYqjNuPa4yKuF9WqZg897coX6yVIuRyj8Cm5+e3gb+vgoFCj0Ld9WpOhDn7fYm4XiIVxAf9KmK/LHH2KjA3gLkHzBYwYoExfSb2SxHycSr/bZkfbC7zg0307fFjIv6TZfX3eHho+ApvXIpMT6b+hQeHRqdne8JhBE6rOEvj2ZtzOLLx7CyW5OHVXdSMxqN+A9haWfNjBg4XzvhszihLondEd9674Gl9p1c82CcevibeiojvjozvXqKDfxfZObfNHOvh2JHgqGwcDG0MLpX/eCDmGl2rceZl28ZGn4mriJuO5H+I3hpeE0kfwfMD+G6fWt6FFG93xhucd0YEv8juOBwS/8sM3uUTkeALc3xat17oBr7TBF6Z/WyQauF9MXHr6yK/rm4Sa25Q16+Yd0har4OhRu+e7W1eM/nIxr6dIZI8eEHvw4SXTvFKdKV5waeEF7S1sI/d2F3u4/y39YKomtkHS+2DXfKuXTf98GsF9Vu2t77wXPBJJctt7aLn8KtOuAXmCBvDD3e9UdKsXtZdH7kghl47E3tgycy1S2bKc3toSAfftDbfNLgWVFWa2diLo8FX2Ngv6U/hUMz9lCk/7fxw9nO60vUPoDtRddAEAAA=');

export class ConditionalReleasePredicate extends Predicate<
  ConditionalReleasePredicateInputs,
  ConditionalReleasePredicateConfigurables
> {
  static readonly abi = abi;
  static readonly bytecode = bytecode;

  constructor(params: ConditionalReleasePredicateParameters) {
    super({ abi, bytecode, ...params });
  }
}
